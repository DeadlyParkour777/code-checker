basePath: /
definitions:
  github_com_DeadlyParkour777_code-checker_gateway_internal_types.CreateProblemRequest:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  github_com_DeadlyParkour777_code-checker_gateway_internal_types.CreateTestCaseRequest:
    properties:
      input_data:
        type: string
      output_data:
        type: string
    required:
    - input_data
    - output_data
    type: object
  github_com_DeadlyParkour777_code-checker_gateway_internal_types.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  github_com_DeadlyParkour777_code-checker_gateway_internal_types.RegisterRequest:
    properties:
      password:
        maxLength: 100
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  github_com_DeadlyParkour777_code-checker_pkg_auth.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user_id:
        type: string
    type: object
  github_com_DeadlyParkour777_code-checker_pkg_auth.RegisterResponse:
    properties:
      message:
        type: string
      user_id:
        type: string
    type: object
  github_com_DeadlyParkour777_code-checker_pkg_problem.Problem:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  github_com_DeadlyParkour777_code-checker_pkg_problem.TestCase:
    properties:
      id:
        type: string
      input_data:
        type: string
      output_data:
        type: string
      problem_id:
        type: string
    type: object
  github_com_DeadlyParkour777_code-checker_pkg_result.Submission:
    properties:
      created_at:
        type: string
      id:
        type: string
      language:
        type: string
      problem_id:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_DeadlyParkour777_code-checker_pkg_submission.Submission:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: string
      language:
        type: string
      problem_id:
        type: string
      status:
        description: '"Pending", "Processing", "AC", "WA", "TLE", "CE", "RE"'
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  title: Code Checker API Gateway
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns JWT tokens.
      parameters:
      - description: User Login Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_gateway_internal_types.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_pkg_auth.LoginResponse'
        "400":
          description: Invalid request body or validation error
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Log in a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account.
      parameters:
      - description: User Registration Info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_gateway_internal_types.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_pkg_auth.RegisterResponse'
        "400":
          description: Invalid request body or validation error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /problems:
    get:
      description: Retrieves a list of all available problems. Requires authentication.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_pkg_problem.Problem'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all problems
      tags:
      - problems
    post:
      consumes:
      - application/json
      description: Adds a new problem to the system. Requires authentication.
      parameters:
      - description: Problem Info
        in: body
        name: problem
        required: true
        schema:
          $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_gateway_internal_types.CreateProblemRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_pkg_problem.Problem'
        "400":
          description: Invalid request body or validation error
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new problem
      tags:
      - problems
  /problems/{problemID}:
    get:
      description: Retrieves details for a specific problem. Requires authentication.
      parameters:
      - description: Problem ID
        in: path
        name: problemID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_pkg_problem.Problem'
        "400":
          description: Problem ID is required
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Problem not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a single problem by ID
      tags:
      - problems
  /problems/{problemID}/testcases:
    post:
      consumes:
      - application/json
      description: Adds a new test case to a specific problem. Requires admin rights.
      parameters:
      - description: ID of the problem to add test case to
        in: path
        name: problemID
        required: true
        type: string
      - description: Test Case Data
        in: body
        name: testCase
        required: true
        schema:
          $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_gateway_internal_types.CreateTestCaseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_pkg_problem.TestCase'
        "400":
          description: Invalid request body or problem ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Problem not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a test case for a problem
      tags:
      - problems
  /submissions:
    post:
      consumes:
      - multipart/form-data
      description: Submits a code file for a specific problem. Requires authentication.
      parameters:
      - description: ID of the problem
        in: formData
        name: problem_id
        required: true
        type: string
      - description: Programming language (e.g., 'go', 'python')
        in: formData
        name: language
        required: true
        type: string
      - description: The code file to be submitted
        in: formData
        name: code_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_pkg_submission.Submission'
        "400":
          description: Bad request (e.g., missing file)
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new submission
      tags:
      - submissions
  /submissions/history:
    get:
      description: Retrieves a list of all submissions made by the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_DeadlyParkour777_code-checker_pkg_result.Submission'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user's submission history
      tags:
      - submissions
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
