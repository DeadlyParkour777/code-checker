// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: problem.proto

package problempb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProblemRequest) Reset() {
	*x = CreateProblemRequest{}
	mi := &file_problem_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProblemRequest) ProtoMessage() {}

func (x *CreateProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProblemRequest.ProtoReflect.Descriptor instead.
func (*CreateProblemRequest) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{0}
}

func (x *CreateProblemRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateProblemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProblemRequest) Reset() {
	*x = GetProblemRequest{}
	mi := &file_problem_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemRequest) ProtoMessage() {}

func (x *GetProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemRequest.ProtoReflect.Descriptor instead.
func (*GetProblemRequest) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{1}
}

func (x *GetProblemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListProblemsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemsRequest) Reset() {
	*x = ListProblemsRequest{}
	mi := &file_problem_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsRequest) ProtoMessage() {}

func (x *ListProblemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsRequest.ProtoReflect.Descriptor instead.
func (*ListProblemsRequest) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{2}
}

type Problem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Problem) Reset() {
	*x = Problem{}
	mi := &file_problem_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{3}
}

func (x *Problem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Problem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Problem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Problem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ListProblemsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Problems      []*Problem             `protobuf:"bytes,1,rep,name=problems,proto3" json:"problems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemsResponse) Reset() {
	*x = ListProblemsResponse{}
	mi := &file_problem_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsResponse) ProtoMessage() {}

func (x *ListProblemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsResponse.ProtoReflect.Descriptor instead.
func (*ListProblemsResponse) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{4}
}

func (x *ListProblemsResponse) GetProblems() []*Problem {
	if x != nil {
		return x.Problems
	}
	return nil
}

type TestCase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	InputData     string                 `protobuf:"bytes,3,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	OutputData    string                 `protobuf:"bytes,4,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	mi := &file_problem_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{5}
}

func (x *TestCase) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestCase) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *TestCase) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

func (x *TestCase) GetOutputData() string {
	if x != nil {
		return x.OutputData
	}
	return ""
}

type CreateTestCaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	InputData     string                 `protobuf:"bytes,2,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	OutputData    string                 `protobuf:"bytes,3,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestCaseRequest) Reset() {
	*x = CreateTestCaseRequest{}
	mi := &file_problem_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestCaseRequest) ProtoMessage() {}

func (x *CreateTestCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestCaseRequest.ProtoReflect.Descriptor instead.
func (*CreateTestCaseRequest) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTestCaseRequest) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *CreateTestCaseRequest) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

func (x *CreateTestCaseRequest) GetOutputData() string {
	if x != nil {
		return x.OutputData
	}
	return ""
}

type GetTestCasesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestCasesRequest) Reset() {
	*x = GetTestCasesRequest{}
	mi := &file_problem_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestCasesRequest) ProtoMessage() {}

func (x *GetTestCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestCasesRequest.ProtoReflect.Descriptor instead.
func (*GetTestCasesRequest) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{7}
}

func (x *GetTestCasesRequest) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type GetTestCasesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestCases     []*TestCase            `protobuf:"bytes,1,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestCasesResponse) Reset() {
	*x = GetTestCasesResponse{}
	mi := &file_problem_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestCasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestCasesResponse) ProtoMessage() {}

func (x *GetTestCasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestCasesResponse.ProtoReflect.Descriptor instead.
func (*GetTestCasesResponse) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{8}
}

func (x *GetTestCasesResponse) GetTestCases() []*TestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

var File_problem_proto protoreflect.FileDescriptor

const file_problem_proto_rawDesc = "" +
	"\n" +
	"\rproblem.proto\x12\aproblem\"N\n" +
	"\x14CreateProblemRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"#\n" +
	"\x11GetProblemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x15\n" +
	"\x13ListProblemsRequest\"p\n" +
	"\aProblem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\"D\n" +
	"\x14ListProblemsResponse\x12,\n" +
	"\bproblems\x18\x01 \x03(\v2\x10.problem.ProblemR\bproblems\"y\n" +
	"\bTestCase\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\x12\x1d\n" +
	"\n" +
	"input_data\x18\x03 \x01(\tR\tinputData\x12\x1f\n" +
	"\voutput_data\x18\x04 \x01(\tR\n" +
	"outputData\"v\n" +
	"\x15CreateTestCaseRequest\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x1d\n" +
	"\n" +
	"input_data\x18\x02 \x01(\tR\tinputData\x12\x1f\n" +
	"\voutput_data\x18\x03 \x01(\tR\n" +
	"outputData\"4\n" +
	"\x13GetTestCasesRequest\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\"H\n" +
	"\x14GetTestCasesResponse\x120\n" +
	"\n" +
	"test_cases\x18\x01 \x03(\v2\x11.problem.TestCaseR\ttestCases2\xed\x02\n" +
	"\x0eProblemService\x12@\n" +
	"\rCreateProblem\x12\x1d.problem.CreateProblemRequest\x1a\x10.problem.Problem\x12:\n" +
	"\n" +
	"GetProblem\x12\x1a.problem.GetProblemRequest\x1a\x10.problem.Problem\x12K\n" +
	"\fListProblems\x12\x1c.problem.ListProblemsRequest\x1a\x1d.problem.ListProblemsResponse\x12C\n" +
	"\x0eCreateTestCase\x12\x1e.problem.CreateTestCaseRequest\x1a\x11.problem.TestCase\x12K\n" +
	"\fGetTestCases\x12\x1c.problem.GetTestCasesRequest\x1a\x1d.problem.GetTestCasesResponseBBZ@github.com/DeadlyParkour777/code-checker/pkg/problempb;problempbb\x06proto3"

var (
	file_problem_proto_rawDescOnce sync.Once
	file_problem_proto_rawDescData []byte
)

func file_problem_proto_rawDescGZIP() []byte {
	file_problem_proto_rawDescOnce.Do(func() {
		file_problem_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_problem_proto_rawDesc), len(file_problem_proto_rawDesc)))
	})
	return file_problem_proto_rawDescData
}

var file_problem_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_problem_proto_goTypes = []any{
	(*CreateProblemRequest)(nil),  // 0: problem.CreateProblemRequest
	(*GetProblemRequest)(nil),     // 1: problem.GetProblemRequest
	(*ListProblemsRequest)(nil),   // 2: problem.ListProblemsRequest
	(*Problem)(nil),               // 3: problem.Problem
	(*ListProblemsResponse)(nil),  // 4: problem.ListProblemsResponse
	(*TestCase)(nil),              // 5: problem.TestCase
	(*CreateTestCaseRequest)(nil), // 6: problem.CreateTestCaseRequest
	(*GetTestCasesRequest)(nil),   // 7: problem.GetTestCasesRequest
	(*GetTestCasesResponse)(nil),  // 8: problem.GetTestCasesResponse
}
var file_problem_proto_depIdxs = []int32{
	3, // 0: problem.ListProblemsResponse.problems:type_name -> problem.Problem
	5, // 1: problem.GetTestCasesResponse.test_cases:type_name -> problem.TestCase
	0, // 2: problem.ProblemService.CreateProblem:input_type -> problem.CreateProblemRequest
	1, // 3: problem.ProblemService.GetProblem:input_type -> problem.GetProblemRequest
	2, // 4: problem.ProblemService.ListProblems:input_type -> problem.ListProblemsRequest
	6, // 5: problem.ProblemService.CreateTestCase:input_type -> problem.CreateTestCaseRequest
	7, // 6: problem.ProblemService.GetTestCases:input_type -> problem.GetTestCasesRequest
	3, // 7: problem.ProblemService.CreateProblem:output_type -> problem.Problem
	3, // 8: problem.ProblemService.GetProblem:output_type -> problem.Problem
	4, // 9: problem.ProblemService.ListProblems:output_type -> problem.ListProblemsResponse
	5, // 10: problem.ProblemService.CreateTestCase:output_type -> problem.TestCase
	8, // 11: problem.ProblemService.GetTestCases:output_type -> problem.GetTestCasesResponse
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_problem_proto_init() }
func file_problem_proto_init() {
	if File_problem_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_problem_proto_rawDesc), len(file_problem_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_problem_proto_goTypes,
		DependencyIndexes: file_problem_proto_depIdxs,
		MessageInfos:      file_problem_proto_msgTypes,
	}.Build()
	File_problem_proto = out.File
	file_problem_proto_goTypes = nil
	file_problem_proto_depIdxs = nil
}
